---
# yaml-language-server: $schema=https://kubernetes-schemas.devbu.io/externalsecret_v1beta1.json
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: glauth
  namespace: default
spec:
  secretStoreRef:
    kind: ClusterSecretStore
    name: onepassword-connect
  target:
    name: glauth-secret
    creationPolicy: Owner
    template:
      engineVersion: v2
      data:
        server.toml: |
          debug = true
          [ldap]
              enabled = true
              listen = "0.0.0.0:389"
          [ldaps]
              enabled = false
          [api]
              enabled = true
              tls = false
              listen = "0.0.0.0:5555"
          [backend]
              datastore = "config"
              baseDN = "dc=home,dc=lab"
              nameformat = "cn"
              groupformat = "ou"
        groups.toml: |
          [[groups]]
              name = "svcaccts"
              gidnumber = 6500
          [[groups]]
              name = "admins"
              gidnumber = 6501
          [[groups]]
              name = "people"
              gidnumber = 6502
        # Create passbcrypt:
        #   https://gchq.github.io/CyberChef/#recipe=Bcrypt(12)To_Hex('None',0)
        # or
        #   htpasswd -bnBC 10 "" YOUR_PASSWORD | tr -d ':\n' | od -A n -t x1 | sed 's/ *//g' | tr -d '\n'
        users.toml: |
          [[users]]
              name = "{{ .search_username }}"
              uidnumber = 5000
              primarygroup = 6500
              passbcrypt = "{{ .search_password }}"
              [[users.capabilities]]
                  action = "search"
                  object = "*"
          [[users]]
              name = "{{ .dean_username }}"
              mail = "{{ .dean_email }}"
              givenname = "{{ .dean_givenname }}"
              sn = "{{ .dean_surname }}"
              uidnumber = 5001
              primarygroup = 6502
              othergroups = [ 6501 ]
              passbcrypt = "{{ .dean_password }}"
          [[users]]
              name = "{{ .britt_username }}"
              mail = "{{ .britt_email }}"
              givenname = "{{ .britt_givenname }}"
              sn = "{{ .britt_surname }}"
              uidnumber = 5002
              primarygroup = 6502
              passbcrypt = "{{ .britt_password }}"
  dataFrom:
    - extract:
        key: glauth
