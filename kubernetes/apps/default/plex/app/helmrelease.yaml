---
# yaml-language-server: $schema=https://kubernetes-schemas.devbu.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: plex
  namespace: default
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 2.6.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    defaultPodOptions:
      securityContext:
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: "OnRootMismatch"
        supplementalGroups: [44, 109, 10000]
    controllers:
      main:
        type: statefulset
        statefulset:
          volumeClaimTemplates:
            - name: config
              globalMounts:
                - path: /config
              accessMode: ReadWriteOnce
              size: 150Gi
              storageClass: ceph-rbd
        pod:
          labels:
            app: plex
            version: v1
        containers:
          main:
            image:
              repository: ghcr.io/onedr0p/plex
              tag: 1.40.4.8679-424562606
            env:
              TZ: America/New_York
              PLEX_ADVERTISE_URL: https://plex.deangalvin.dev:443
              PLEX_NO_AUTH_NETWORKS: 192.168.2.0/24
            resources:
              requests:
                cpu: 100m
                memory: 2000Mi
              limits:
                memory: 10000Mi
    service:
      main:
        type: LoadBalancer
        externalTrafficPolicy: Local
        ports:
          http:
            port: &port 32400
    ingress:
      main:
        enabled: true
        className: "${INGRESS_CLASS}"
        annotations:
          public.ingress.home.arpa: "true"
          hajimari.io/icon: mdi:plex
        hosts:
          - host: &host "{{ .Release.Name }}.${DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  name: main
                  port: *port
        tls:
          - secretName: "${PRODUCTION_TLS}"
            hosts:
              - *host
    persistence:
      media:
        enabled: true
        type: persistentVolumeClaim
        existingClaim: media
        globalMounts:
          - path: /media
      transcode:
        enabled: true
        type: emptyDir
