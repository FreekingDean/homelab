---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: grafana
  namespace: monitoring
spec:
  interval: 15m
  chart:
    spec:
      chart: grafana
      version: 6.50.7
      sourceRef:
        kind: HelmRepository
        name: grafana
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    replicas: 2
    rbac:
      pspEnabled: false
    testFramework:
      enabled: false
    adminUser: admin
    adminPassword: prom-operator
    env:
      GF_ANALYTICS_CHECK_FOR_UPDATES: false
      GF_DATE_FORMATS_USE_BROWSER_LOCALE: true
      GF_EXPLORE_ENABLED: true
      GF_GRAFANA_NET_URL: https://grafana.net
      GF_LOG_FILTERS: rendering:debug
      GF_LOG_MODE: console
      GF_PANELS_DISABLE_SANITIZE_HTML: true
      GF_PATHS_DATA: /var/lib/grafana/data
      GF_PATHS_LOGS: /var/log/grafana
      GF_PATHS_PLUGINS: /var/lib/grafana/plugins
      GF_PATHS_PROVISIONING: /etc/grafana/provisioning
      GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS: natel-discrete-panel,pr0ps-trackmap-panel,panodata-map-panel
      GF_SECURITY_ALLOW_EMBEDDING: true
      GF_SECURITY_COOKIE_SAMESITE: grafana
      GF_SERVER_ROOT_URL: "https://grafana.${DOMAIN}"
    grafana.ini:
      auth.anonymous:
        enabled: true
        org_name: Homelab
        org_id: 1
        org_role: Viewer
    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
          - name: "default"
            orgId: 1
            folder: ""
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/default
    datasources:
      datasources.yaml:
        apiVersion: 1
        datasources:
          - name: Prometheus
            type: prometheus
            access: proxy
            url: http://kube-prometheus-stack-prometheus.svc.cluster.local:9090
            isDefault: true
          - name: Alertmanager
            type: alertmanager
            access: proxy
            url: http://kube-prometheus-stack-alertmanager.monitoring.svc.cluster.local:9093
            jsonData:
              implementation: prometheus
    dashboards:
      default:
        # Ref: https://grafana.com/grafana/dashboards/7845-zfs/
        zfs:
          gnetId: 7845
          revision: 4
          datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/13502-minio-dashboard/
        minio:
          gnetId: 13502
          revision: 10
          datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/1860-node-exporter-full/
        node-exporter-full:
          gnetId: 1860
          revision: 29
          datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/763-redis-dashboard-for-prometheus-redis-exporter-1-x/
        redis:
          gnetId: 763
          revision: 4
          datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/5342-ceph-pools/
        ceph-pools:
          gnetId: 5342
          revision: 9
          datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/5336-ceph-osd-single/
        ceph-osd:
          gnetId: 5336
          revision: 9
          datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/2842-ceph-cluster/
        ceph-cluster:
          gnetId: 2842
          revision: 16
          datasource: Prometheus
        cert-manager:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/cert-manager/dashboards/cert-manager.json
          datasource: Prometheus
        flux-cluster:
          url: https://raw.githubusercontent.com/fluxcd/flux2/main/manifests/monitoring/monitoring-config/dashboards/cluster.json
          datasource: Prometheus
        flux-control-plane:
          url: https://raw.githubusercontent.com/fluxcd/flux2/main/manifests/monitoring/monitoring-config/dashboards/control-plane.json
          datasource: Prometheus
        flux-logs:
          url: https://raw.githubusercontent.com/fluxcd/flux2/main/manifests/monitoring/monitoring-config/dashboards/logs.json
          datasource: Prometheus
        kubernetes-api-server:
          url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-system-api-server.json
          datasource: Prometheus
        kubernetes-coredns:
          url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-system-coredns.json
          datasource: Prometheus
        kubernetes-global:
          url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-views-global.json
          datasource: Prometheus
        kubernetes-namespaces:
          url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-views-namespaces.json
          datasource: Prometheus
        kubernetes-nodes:
          url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-views-nodes.json
          datasource: Prometheus
        kubernetes-pods:
          url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-views-pods.json
          datasource: Prometheus
    sidecar:
      dashboards:
        enabled: true
        searchNamespace: ALL
        # folderAnnotation: grafana_folder
        # provider:
        #   foldersFromFilesStructure: true
      datasources:
        enabled: true
        searchNamespace: ALL
    plugins:
      - grafana-clock-panel
      - grafana-piechart-panel
      - grafana-worldmap-panel
      - natel-discrete-panel
      - pr0ps-trackmap-panel
      - vonage-status-panel
    serviceMonitor:
      enabled: true
    ingress:
      enabled: true
      ingressClassName: nginx
      annotations:
        traefik.ingress.kubernetes.io/router.middlewares: "networking-localonly@kubernetescrd"
        hajimari.io/appName: "Grafana"
        hajimari.io/icon: simple-icons:grafana
      hosts:
        - &host "grafana.${DOMAIN}"
      tls:
        - hosts:
            - *host
          secretName: "${PRODUCTION_TLS}"
    imageRenderer:
      enabled: true
      replicas: 2
      networkPolicy:
        limitIngress: false
      serviceMonitor:
        enabled: true
    persistence:
      enabled: false
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                  - key: app.kubernetes.io/name
                    operator: In
                    values: ["grafana"]
              topologyKey: kubernetes.io/hostname
