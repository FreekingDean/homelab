---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: grafana
spec:
  interval: 15m
  chart:
    spec:
      chart: grafana
      version: 8.14.2
      sourceRef:
        kind: HelmRepository
        name: grafana
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    assertNoLeakedSecrets: false
    podLabels:
      sidecar.istio.io/inject: "false"
    replicas: 1
    rbac:
      pspEnabled: false
    testFramework:
      enabled: false
    env:
      JAEGER_AGENT_HOST: ""
      JAEGER_AGENT_PORT: ""
      GF_AUTH_GENERIC_OAUTH_API_URL: "https://auth.deangalvin.dev/api/oidc/userinfo"
      GF_AUTH_GENERIC_OAUTH_AUTH_URL: "https://auth.deangalvin.dev/api/oidc/authorization"
      GF_AUTH_GENERIC_OAUTH_CLIENT_ID: "grafana"
      GF_AUTH_GENERIC_OAUTH_TOKEN_URL: "https://auth.deangalvin.dev/api/oidc/token"
      GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET: "grafana_client_secret"
      GF_ANALYTICS_CHECK_FOR_UPDATES: false
      GF_DATE_FORMATS_USE_BROWSER_LOCALE: true
      GF_EXPLORE_ENABLED: true
      GF_GRAFANA_NET_URL: https://grafana.net
      GF_LOG_FILTERS: rendering:debug
      GF_LOG_MODE: console
      GF_PANELS_DISABLE_SANITIZE_HTML: true
      GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS: natel-discrete-panel,pr0ps-trackmap-panel,panodata-map-panel
      GF_SECURITY_ALLOW_EMBEDDING: true
      GF_SERVER_ROOT_URL: "https://grafana.${DOMAIN}"
    grafana.ini:
      auth.anonymous:
        enabled: true
        org_name: HomeOps
        org_id: 1
        org_role: Viewer
      auth:
        signout_redirect_url: https://auth.deangalvin.dev/logout
        oauth_auto_login: false
      auth.generic_oauth:
        enabled: true
        name: Authelia
        client_id: # Set by env vars
        client_secret: # Set by env vars secret
        auth_url: # Set by env vars
        token_url: # Set by env vars
        api_url: # Set by env vars
        scopes: "openid profile email groups"
        empty_scopes: false
        login_attribute_path: preferred_username
        groups_attribute_path: groups
        name_attribute_path: name
        use_pkce: true
      auth.generic_oauth.group_mapping:
        role_attribute_path: |
          contains(groups[*], 'admins') && 'Admin' || contains(groups[*], 'people') && 'Viewer'
        org_id: 1
      auth.basic:
        enabled: false
        # disable_login_form: false
    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
          - name: "default"
            orgId: 1
            folder: ""
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/default
    datasources:
      datasources.yaml:
        apiVersion: 1
        datasources:
          - name: Loki
            type: loki
            uid: loki
            url: http://loki-gateway.monitoring.svc.cluster.local:80
            jsonData:
              maxLines: 250
          - name: Prometheus
            type: prometheus
            access: proxy
            url: http://kube-prometheus-stack-prometheus:9090
          - name: Alertmanager
            type: alertmanager
            access: proxy
            url: http://kube-prometheus-stack-alertmanager.monitoring.svc.cluster.local:9093
            jsonData:
              implementation: prometheus
    dashboards:
      default:
        flux:
          gnetId: 16714
          revision: 1
          datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/7845-zfs/
        zfs:
          gnetId: 7845
          revision: 4
          datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/13502-minio-dashboard/
        minio:
          gnetId: 13502
          revision: 10
          datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/1860-node-exporter-full/
        node-exporter-full:
          gnetId: 1860
          revision: 29
          datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/763-redis-dashboard-for-prometheus-redis-exporter-1-x/
        redis:
          gnetId: 763
          revision: 4
          datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/5342-ceph-pools/
        ceph-pools:
          gnetId: 5342
          revision: 9
          datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/5336-ceph-osd-single/
        ceph-osd:
          gnetId: 5336
          revision: 9
          datasource: Prometheus
        # Ref: https://grafana.com/grafana/dashboards/2842-ceph-cluster/
        ceph-cluster:
          gnetId: 2842
          revision: 16
          datasource: Prometheus
        traefik:
          gnetId: 4475
          revision: 5
          datasource: Prometheus
        cert-manager:
          url: https://raw.githubusercontent.com/monitoring-mixins/website/master/assets/cert-manager/dashboards/cert-manager.json
          datasource: Prometheus
        kubernetes-api-server:
          url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-system-api-server.json
          datasource: Prometheus
        kubernetes-coredns:
          url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-system-coredns.json
          datasource: Prometheus
        kubernetes-global:
          url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-views-global.json
          datasource: Prometheus
        kubernetes-namespaces:
          url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-views-namespaces.json
          datasource: Prometheus
        kubernetes-nodes:
          url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-views-nodes.json
          datasource: Prometheus
        kubernetes-pods:
          url: https://raw.githubusercontent.com/dotdc/grafana-dashboards-kubernetes/master/dashboards/k8s-views-pods.json
          datasource: Prometheus
        istio-mesh:
          url: https://raw.githubusercontent.com/istio/istio/master/manifests/addons/dashboards/istio-mesh-dashboard.json
          datasource: Prometheus
        istio-extension:
          url: https://raw.githubusercontent.com/istio/istio/master/manifests/addons/dashboards/istio-extension-dashboard.json
          datasource: Prometheus
        istio-performance:
          url: https://raw.githubusercontent.com/istio/istio/master/manifests/addons/dashboards/istio-performance-dashboard.json
          datasource: Prometheus
        istio-service:
          url: https://raw.githubusercontent.com/istio/istio/master/manifests/addons/dashboards/istio-service-dashboard.json
          datasource: Prometheus
        istio-workload:
          url: https://raw.githubusercontent.com/istio/istio/master/manifests/addons/dashboards/istio-workload-dashboard.json
          datasource: Prometheus
        istio-pilot:
          url: https://raw.githubusercontent.com/istio/istio/master/manifests/addons/dashboards/pilot-dashboard.json
          datasource: Prometheus
    sidecar:
      dashboards:
        enabled: true
        searchNamespace: ALL
        # folderAnnotation: grafana_folder
        # provider:
        #   foldersFromFilesStructure: true
      datasources:
        enabled: false
        searchNamespace: ALL
    plugins:
      - grafana-clock-panel
      - grafana-piechart-panel
      - grafana-worldmap-panel
      - natel-discrete-panel
      - pr0ps-trackmap-panel
      - vonage-status-panel
    serviceMonitor:
      enabled: true
    ingress:
      enabled: true
      ingressClassName: "${INGRESS_CLASS}"
      annotations:
        traefik.ingress.kubernetes.io/router.middlewares: "networking-localonly@kubernetescrd"
        hajimari.io/appName: "Grafana"
        hajimari.io/icon: simple-icons:grafana
      hosts:
        - &host "grafana.${DOMAIN}"
      tls:
        - hosts:
            - *host
          secretName: "${PRODUCTION_TLS}"
    imageRenderer:
      enabled: true
      replicas: 2
      networkPolicy:
        limitIngress: false
      serviceMonitor:
        enabled: true
    persistence:
      enabled: false
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                  - key: app.kubernetes.io/name
                    operator: In
                    values: ["grafana"]
              topologyKey: kubernetes.io/hostname
