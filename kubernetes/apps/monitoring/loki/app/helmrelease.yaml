---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: loki
  namespace: monitoring
spec:
  interval: 15m
  chart:
    spec:
      chart: loki
      version: 6.29.0
      sourceRef:
        kind: HelmRepository
        name: grafana
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    loki:
      auth_enabled: false # Disable multi-tenancy
      storage:
        bucketNames:
          chunks: $${S3_LOKI_BUCKET}
          ruler: $${S3_LOKI_BUCKET}
        type: s3
        s3:
          accessKeyId: $${S3_LOKI_ACCESS_KEY_ID}
          secretAccessKey: $${S3_LOKI_SECRET_ACCESS_KEY}
          endpoint: $${S3_LOKI_ENDPOINT}
          region: $${S3_LOKI_REGION}
          s3forcepathstyle: true
      schemaConfig:
        configs:
          - from: "2024-04-01"
            store: tsdb
            object_store: s3
            schema: v13
            index:
              prefix: loki_index_
              period: 24h
      ingester:
        chunk_encoding: snappy
      querier:
        # Default is 4, if you have enough memory and CPU you can increase, reduce if OOMing
        max_concurrent: 4
      pattern_ingester:
        enabled: true
      limits_config:
        allow_structured_metadata: true
        volume_enabled: true

    deploymentMode: SimpleScalable

    backend:
      replicas: 2
      extraArgs:
        - '-config.expand-env=true'
      extraEnv: &s3_args
        - name: S3_LOKI_PORT
          valueFrom:
            configMapKeyRef:
              name: loki-s3-bucket
              key: BUCKET_PORT
        - name: S3_LOKI_HOST
          valueFrom:
            configMapKeyRef:
              name: loki-s3-bucket
              key: BUCKET_HOST
        - name: S3_LOKI_ENDPOINT
          value: "http://$(S3_LOKI_HOST):$(S3_LOKI_PORT)"
        - name: S3_LOKI_REGION
          valueFrom:
            configMapKeyRef:
              name: loki-s3-bucket
              key: BUCKET_REGION
        - name: S3_LOKI_BUCKET
          valueFrom:
            configMapKeyRef:
              name: loki-s3-bucket
              key: BUCKET_NAME
        - name: S3_LOKI_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: loki-s3-bucket
              key: AWS_ACCESS_KEY_ID
        - name: S3_LOKI_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: loki-s3-bucket
              key: AWS_SECRET_ACCESS_KEY
    read:
      replicas: 2
      extraArgs:
        - '-config.expand-env=true'
      extraEnv: *s3_args
    write:
      replicas: 3 # To ensure data durability with replication
      extraArgs:
        - '-config.expand-env=true'
      extraEnv: *s3_args

    gateway:
      service:
        type: LoadBalancer
      nginxConfig:
        logFormat: main
