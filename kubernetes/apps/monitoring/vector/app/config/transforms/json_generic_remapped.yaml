type: remap
inputs:
  - kubernetes_router.istiod
  - kubernetes_router.metallb
  - kubernetes_router.redfish_exporter
  - kubernetes_router.onepassword_connect
source: |
  message = to_string!(.message)
  jsondata, err = parse_json(message)
  if err == null {
    if exists(jsondata.level) {
      level_number, err = to_int(jsondata.level)
      if err == null {
        .level = "info"
      } else {
        .level = downcase!(del(jsondata.level))
      }
    }

    if exists(jsondata.timestamp) {
      .timestamp = del(jsondata.timestamp)
    } else if exists(jsondata.time) {
      .timestamp = del(jsondata.time)
    } else if exists(jsondata.ts) {
      .timestamp = del(jsondata.ts)
    }

    if exists(jsondata.message) {
      .message = del(jsondata.message)
    } else if exists(jsondata.msg) {
      .message = del(jsondata.msg)
    } else if exists(jsondata.log_message) {
      .message = del(jsondata.log_message)
    } else {
      .message = "data only log"
    }

    .data, _ = set(.data, [.labels.kubernetes_name], jsondata)
  }
