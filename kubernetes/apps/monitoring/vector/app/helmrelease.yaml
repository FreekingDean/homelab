---
apiVersion: source.toolkit.fluxcd.io/v1
kind: HelmRepository
metadata:
  name: vector
  namespace: monitoring
spec:
  interval: 1h
  url: "https://helm.vector.dev"
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: vector
  namespace: monitoring
spec:
  interval: 15m
  chart:
    spec:
      chart: vector
      version: 0.41.0
      sourceRef:
        kind: HelmRepository
        name: vector
        namespace: monitoring
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    role: Agent
    customConfig:
      api:
        address: 0.0.0.0:8686
        enabled: true
        playground: false
      data_dir: /vector-data-dir
      sources:
        internal_metrics:
          type: internal_metrics
        kubernetes:
          type: kubernetes_logs
      transforms:
        router:
          type: exclusive_route
          inputs:
            - kubernetes
          routes:
            - condition: '.kubernetes.container_name == "radarr"'
              name: arr
        arr_remapped:
          type: remap
          inputs:
            - router.arr
          source: |
            lgfmt, _ = parse_regex(.message, r'(?i)\[(?<level>fatal|error|warn|info|debug|trace)\] (?<message>.*)')
            .level = lgfmt.level || "unknown"
            .level = downcase(to_string(.level))
            if .level != "unknown" {
              .message = lgfmt.message
            }
        final_remapper:
          type: remap
          inputs:
            - "*_remapped"
            - router._unmatched
          source: |
            tmp = del(.)

            .timestamp = tmp.timestamp
            .message = tmp.message
            .level = tmp.level || "debug"

            .labels = tmp.labels || {}
            .labels.vector_config_version = "1"
            .labels.source_file = tmp.file
            .labels.kubernetes_container_image = tmp.kubernetes.container_image
            .labels.kubernetes_container_name = tmp.kubernetes.container_name
            .labels.kubernetes_pod = tmp.kubernetes.pod_name
            .labels.kubernetes_namespace = tmp.kubernetes.pod_namespace
            .labels.kubernetes_node = tmp.kubernetes.pod_node_name
            .labels.kubernetes_chassis = tmp.kubernetes.node_labels."topology.rook.io/chassis"
            .labels.kubernetes_component = tmp.kubernetes.pod_labels."app.kubernetes.io/component"
            .labels.kubernetes_instance = tmp.kubernetes.pod_labels."app.kubernetes.io/instance"
      sinks:
        loki:
          remove_label_fields: true
          encoding:
            codec: json
          endpoint: http://loki-gateway.monitoring.svc.cluster.local:80
          inputs:
          - final_remapper
          labels:
            '*': '{{ labels }}'
          type: loki
