---
{{- include "bjw-s.common.loader.init" . }}

{{- define "app-template.hardcodedValues" -}}
# Set the nameOverride based on the release name if no override has been set
{{ if not .Values.global.nameOverride }}
global:
  nameOverride: "{{ .Release.Name }}"
{{ end }}

{{ with .Values.myvalues }}
defaultPodOptions:
{{ if .resources }}
  resources:
    requests:
      memory: {{ .resources.requests }}
    limits:
      memory: {{ .resources.limits }}
{{ end }}
{{ with .pod.labels}}
  labels:
    {{- toYaml . | nindent 4 }}
{{ end }}
{{ if .runAsUser }}
  podSecurityContext:
    runAsUser: {{ .runAsUser }}
    runAsGroup: {{ .runAsUser }}
    fsGroup: {{ .runAsUser }}
    fsGroupChangePolicy: "OnRootMismatch"
{{ end }}
controllers:
  main:
    replicas: {{ .replicas }}
    strategy: RollingUpdate
    annotations:
      {{ with .annotations }}
      {{- toYaml . | nindent 6 }}
      {{ end }}
      reloader.stakater.com/auto: "true"
    {{ if .labels }}
    labels:
      {{ with .labels }}
      {{- toYaml . | nindent 6 }}
      {{ end }}
    {{ end }}
    containers:
      main:
        image:
          # https://github.com/glauth/glauth/issues/298
          repository: {{ .image.repository }}
          tag: {{ .image.tag }}
        command: {{ .command }}
        {{ with .ports }}
        ports:
          {{ range $name, $port := . }}
            - containerPort: {{ $port }}
              name: {{ $name }}
              protocol: TCP
          {{ end }}
        {{ end }}

{{ if .ports }}
service:
  main:
    ports:
      {{ range $name, $port := .ports }}
      {{ $name }}:
        enabled: true
        port: {{ $port }}
      {{ end }}
{{ end }}

{{ if .serviceMonitor }}
serviceMonitor:
  main:
    enabled: true
    endpoints:
      - port: metrics
        scheme: http
        path: /metrics
        interval: 1m
        scrapeTimeout: 10s
{{ end }}

{{ if .persistence }}
persistence:
  {{ range $name, $config := .persistence }}
    {{ $name }}:
      enabled: true
      type: {{ $config.type }}
      {{ if eq $config.type "secret" }}
      name: {{ $config.name }}
      {{ if $config.items }}
      items:
        {{ range $key, $path := $config.items }}
        - key: {{ $key }}
          path: {{ $path }}
        {{ end }}
      {{ end }}
    {{ end }}
  {{ end }}
{{ end }}
{{ if .ingress.enabled }}
ingress:
  main:
    enabled: true
{{ else }}
ingress:
  main:
    enabled: false
{{ end }}
{{ end }}
{{- end -}}


{{- $_ := mergeOverwrite .Values (include "app-template.hardcodedValues" . | fromYaml) -}}

{{/* Render the templates */}}
{{ include "bjw-s.common.loader.generate" . }}
